db.movies.find( {} )

db.movies.find( {} ).pretty()

db.movies.find( {runtime: 11} ).pretty()

db.movies.find( {runtime: 11} ).pretty().limit(3)

db.movies.find( {runtime: 11}, {title:1} ).pretty().limit(3)

db.movies.find( {runtime: 11}, {runtime:1, title:1, _id:0} ).pretty().limit(3)

db.movies.find( {runtime: {$eq: 11}}, {runtime:1, title:1, _id:0} ).pretty().limit(5).sort({title: 1})

db.movies.find( {runtime: {$eq: 11}}, {runtime:1, title:1, _id:0} ).pretty().limit(5).sort({title: -1})

db.movies.find( {runtime: {$eq: 11}}, {runtime:1, title:1, _id:0} ).pretty().limit(5).sort({title: -1}).readConcern("majority")

db.movies.find( {runtime: {$eq: 11}}, {runtime:1, title:1, _id:0} ).pretty().limit(5).sort({title: -1}).readConcern("linearizable").maxTimeMS(10000)

//create a collection named SarahSamples in the Training database
show dbs

use Training

db

show collections

db.createCollection("SarahSamples")

db.SarahSamples.insertOne(
{
	"code": "1b7ad0de-5836-489b-9791-5a81a51cdb81",
    "model" : "Boeing 737-400",
    "minRunwayLength" : 1700,
	"range": 3500,
	"capacity": 189
}
)

db.SarahSamples.insertMany(
[
{
	"code": "eede6be6-f716-4e2e-bf81-885f0a16a50c",
    "model" : "Boeing 737-800",
    "minRunwayLength" : 2500,
	"range": 5765,
	"capacity": 200
},
{
	"code": "1b7ad0de-5836-489b-9791-5a81a51cdb81",
    "model" : "Airbus A320",
    "minRunwayLength" : 2500,
	"range": 6000,
	"capacity": 150
},
{
	"code": "a3faaef2-fe54-4949-928f-be93584da471",
    "model" : "Airbus A319",
    "minRunwayLength" : 2255,
	"range": 6900,
	"capacity": 124
},
{
	"code": "eede6be6-f716-4e2e-bf81-885f0a16a50c",
    "model" : "Boeing 737-900",
    "minRunwayLength" : 2975,
	"range": 5600,
	"capacity": 215
},
{
	"code": "51192f6b-9c26-4ef9-b843-cf241f326091",
    "model" : "Embraer E-175",
    "minRunwayLength" : 1261,
	"range": 4000,
	"capacity": 80
},
{
	"code": "00126a63-f342-4ccd-ba86-4a7beecf10c0",
    "model" : "Airbus A350",
    "minRunwayLength" : 3200,
	"range": 15000,
	"capacity": 300
},
{
	"code": "4f356f56-84dd-484f-a5f7-b960dfba5823",
    "model" : "Boeing 747",
    "minRunwayLength" : 3100,
	"range": 14000,
	"capacity": 467
},
{
	"code": "0c3a60d6-8c99-472e-bf23-c1e689c5f6eb",
    "model" : "ATR 72",
    "minRunwayLength" : 1000,
	"range": 3218,
	"capacity": 78
}
]
)

db.SarahSamples.find({})

db.SarahSamples.insertOne(
{
    "type" : "International",
    "delayed" : false,
    "duration" : 150,
	"distanceKm": 1870,
    "departure" : {
        "code": "CDG",
        "city": "Paris",
        "country":"France",
        "runwayLength": 4215,
		"location": {
			"type": "Point",
			"coordinates": [2.3, 48.8]
		}
    },
    "destination" : {
        "code": "OTP",
        "city": "Bucharest",
        "country":"Romania",
        "runwayLength": 3500,
		"location": {
			"type": "Point",
			"coordinates": [26.1, 44.4]
		}
    },
    "aircraftCode" : "1b7ad0de-5836-489b-9791-5a81a51cdb81",
    "crew":[
        {"name": "Renaud Cahun", "position": "Captain", "hoursSlept": 8},
        {"name": "Nina Peltier", "position": "Attendant", "nationality": "France", "hoursSlept": 6},
		{"name": "Lou Galopin", "position": "Attendant", "nationality": "France", "hoursSlept": 7}
    ]
}
)

db.SarahSamples.find({})

db.SarahSamples.find({"departure.city": "Paris"}, {delayed: 1, aircraftCode: 1, _id: 0})

db.SarahSamples.insertMany(
[
{
    "type" : "International",
    "delayed" : false,
    "duration" : 120,
	"distanceKm": 1730,
    "departure" : {
        "code": "CDG",
        "city": "Paris",
        "country":"France",
        "runwayLength": 4215,
		"location": {
			"type": "Point",
			"coordinates": [2.3, 48.8]
		}
    },
    "destination" : {
        "code": "LIS",
        "city": "Lisabon",
        "country":"Portugal",
        "runwayLength": 3805,
		"location": {
			"type": "Point",
			"coordinates": [-9.1, 38.7]
		}
    },
    "aircraftCode" : "eede6be6-f716-4e2e-bf81-885f0a16a50c",
    "crew":[
        {"name": "Pierre Cotard", "position": "Captain", "nationality": "France", "hoursSlept": 4},
        {"name": "Amanda Lucas", "position": "Attendant", "hoursSlept": 6},
        {"name": "Joe Stan", "position": "Attendant", "nationality": "UK", "hoursSlept": 8}
    ]
},
{
    "type" : "International",
    "delayed" : true,
    "duration" : 260,
	"distanceKm": 3200,
    "departure" : {
        "code": "IST",
        "city": "Istanbul",
        "country":"Turkey",
        "runwayLength": 4100,
		"location": {
			"type": "Point",
			"coordinates": [28.9, 41.0]
		}
    },
    "destination" : {
        "code": "LIS",
        "city": "Lisabon",
        "country":"Portugal",
        "runwayLength": 3805,
		"location": {
			"type": "Point",
			"coordinates": [-9.1, 38.7]
		}
    },
    "aircraftCode" : "1b7ad0de-5836-489b-9791-5a81a51cdb81",
    "crew":[
        {"name": "Hakan Antal", "position": "Captain", "nationality": "Turkey", "hoursSlept": 5},
        {"name": "Anna Hassan", "position": "Attendant", "hoursSlept": 4},
        {"name": "Adina Popescu", "position": "Attendant", "hoursSlept": 9}
    ]
},
{
    "type" : "Internal",
    "delayed" : true,
    "duration" : 80,
	"distanceKm": 400,
    "departure" : {
        "code": "CDG",
        "city": "Paris",
        "country":"France",
        "runwayLength": 4215,
		"location": {
			"type": "Point",
			"coordinates": [2.3, 48.8]
		}
    },
    "destination" : {
        "code": "LYS",
        "city": "Lyon",
        "country":"France",
        "runwayLength": 4000,
		"location": {
			"type": "Point",
			"coordinates": [4.8, 45.7]
		}
    },
    "aircraftCode" : "51192f6b-9c26-4ef9-b843-cf241f326091",
    "crew":[]
}
]
)

db.SarahSamples.find({})

//DELETE one
db.SarahSamples.find({"departure.city": "Paris", "destination.city": "Lisabon"}, {aircraftCode: 1})

db.SarahSamples.find({"departure.city": "Paris", "destination.city": "Lisabon"}).count() //result: 1

db.SarahSamples.deleteOne({"departure.city": "Paris", "destination.city": "Lisabon"})

db.SarahSamples.find({"departure.city": "Paris", "destination.city": "Lisabon"}).count() //result: 0

//DELETE many
db.SarahSamples.find({})

db.SarahSamples.deleteMany({"type": "Internal"})

db.SarahSamples.find({})

//.remove can work like .deleteOne --provide a second parameter, true-- or .deleteMany --just provide 1 parameter. It can also delete all the documents --.remove({})-- so be very careful using it!